import winsound
import os
from config import *
from llm import generate_with_groq, generate_with_yandex
from mic import record_after_wake_word
from tts import load_silero_tts, tts
def main():
    silero_model = load_silero_tts()
    print("ü§ñ –ì–æ–ª–æ—Å–æ–≤–æ–π –∞–≥–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω!")

    while True:
        user_phrase = record_after_wake_word()
        if not user_phrase:
            continue
        print(f"üó£Ô∏è –í—ã —Å–∫–∞–∑–∞–ª–∏: {user_phrase}")

        if user_phrase.lower() == "–¥–∞–≤–∞–π —Å –Ω–∞—á–∞–ª–∞":
            print("üîÑ –ù–æ–≤—ã–π —á–∞—Ç –æ—Ç–∫—Ä—ã—Ç.")
            winsound.PlaySound("new_chat.wav", winsound.SND_FILENAME)
            continue

        if LLM_PROVIDER == "groq":
            reply = generate_with_groq(user_phrase, GROQ_API_KEY)
        elif LLM_PROVIDER == "yandex":
            reply = generate_with_yandex(user_phrase)
        else:
            reply = NOT_UNDERSTOOD

        print("üß† Qwen –≥–æ–≤–æ—Ä–∏—Ç:", reply)

        tts_file = tts(reply, silero_model, SELECTED_SPEAKER)
        if tts_file and os.path.exists(tts_file):
            print("üéß –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º...")
            winsound.PlaySound(tts_file, winsound.SND_FILENAME)
        else:
            print("üîá –ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –æ–∑–≤—É—á–∫–∏")
            winsound.PlaySound("no_response.wav", winsound.SND_FILENAME)

if __name__ == '__main__':
    main()