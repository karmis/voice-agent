import speech_recognition as sr
import time
import winsound
import os

from config import LANGUAGE, WAKE_WORD, MICROPHONE_INDEX, TIMEOUT
from utils import is_wake_word


def get_microphone_device():
    print("üîç –ò—â—É –ø–æ–¥—Ö–æ–¥—è—â–∏–π –º–∏–∫—Ä–æ—Ñ–æ–Ω...")
    mics = sr.Microphone.list_microphone_names()
    if MICROPHONE_INDEX is not None and MICROPHONE_INDEX < len(mics):
        selected_name = mics[MICROPHONE_INDEX]
        print(f"üü¢ –ò—Å–ø–æ–ª—å–∑—É—é –º–∏–∫—Ä–æ—Ñ–æ–Ω #{MICROPHONE_INDEX}: {selected_name}")
        return MICROPHONE_INDEX
    for idx, name in enumerate(mics):
        if 'microphone' in name.lower() or 'mic' in name.lower():
            print(f"üü¢ –ù–∞—à–µ–ª –º–∏–∫—Ä–æ—Ñ–æ–Ω #{idx}: {name}")
            return idx
    print("‚ö†Ô∏è –ú–∏–∫—Ä–æ—Ñ–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø–æ–ø—Ä–æ–±—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π")
    return None


def record_after_wake_word():
    r = sr.Recognizer()
    mic_index = get_microphone_device()
    print("üéôÔ∏è –ì–æ—Ç–æ–≤ –∫ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ –≥–æ–ª–æ—Å—É...")

    with sr.Microphone(device_index=mic_index) as source:
        while True:
            try:
                print('üîá –ü–æ–¥—Å—Ç—Ä–∞–∏–≤–∞—é—Å—å –ø–æ–¥ —Ñ–æ–Ω...')
                r.adjust_for_ambient_noise(source, duration=0.5)
                print("üí§ –ñ–¥—É –∫–æ–º–∞–Ω–¥—É...")
                audio = r.listen(source, timeout=TIMEOUT, phrase_time_limit=10)
                text = r.recognize_google(audio, language=LANGUAGE).lower()
                print(f"üó£Ô∏è –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: {text}")

                if is_wake_word(text):
                    print("üü¢ –ö–æ–º–∞–Ω–¥–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!")
                    full_text = text.split(WAKE_WORD, 1)[-1].strip()
                    if not full_text:
                        print("‚ö†Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã")
                        winsound.PlaySound("not_understood.wav", winsound.SND_FILENAME)
                        continue
                    print(f"üìù –ü–æ–ª—É—á–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {full_text}")
                    return full_text
            except sr.UnknownValueError:
                print("‚ùå –ù–µ –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å.")
            except sr.RequestError:
                print("üåê –û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å Google STT.")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞: {e}")
                continue
